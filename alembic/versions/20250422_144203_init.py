"""init

Revision ID: 7d41732abb64
Revises: 
Create Date: 2025-04-22 14:42:03.088788

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7d41732abb64'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('annotation_targets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('completion_annotations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('rater_id', sa.String(), nullable=True),
    sa.Column('reward', sa.Float(), nullable=True),
    sa.Column('annotation_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('google_id', sa.String(), nullable=True),
    sa.Column('auth_provider', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_auth_provider'), 'users', ['auth_provider'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_table('agent_widgets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cors_origin', sa.String(), nullable=False),
    sa.Column('tools', sa.JSON(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('n_calls', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('annotation_target_annotation_link',
    sa.Column('annotation_target_id', sa.UUID(), nullable=False),
    sa.Column('completion_annotation_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['annotation_target_id'], ['annotation_targets.id'], ),
    sa.ForeignKeyConstraint(['completion_annotation_id'], ['completion_annotations.id'], ),
    sa.PrimaryKeyConstraint('annotation_target_id', 'completion_annotation_id')
    )
    op.create_table('completion_projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('creator_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_completion_projects_creator_id'), 'completion_projects', ['creator_id'], unique=False)
    op.create_table('completion_project_call_keys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['completion_projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_completion_project_call_keys_key'), 'completion_project_call_keys', ['key'], unique=True)
    op.create_index(op.f('ix_completion_project_call_keys_project_id'), 'completion_project_call_keys', ['project_id'], unique=False)
    op.create_table('completions_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('messages', sa.JSON(), nullable=True),
    sa.Column('messages_hash', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('response_format', sa.JSON(), nullable=True),
    sa.Column('response_format_hash', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['completion_projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_completions_requests_project_id'), 'completions_requests', ['project_id'], unique=False)
    op.create_table('project_memberships',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(), server_default='viewer', nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['completion_projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'project_id')
    )
    op.create_table('completion_alternatives',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('original_completion_request_id', sa.UUID(), nullable=True),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('alternative_content', sa.Text(), nullable=False),
    sa.Column('rater_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('annotation_target_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['annotation_target_id'], ['annotation_targets.id'], ),
    sa.ForeignKeyConstraint(['original_completion_request_id'], ['completions_requests.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['completion_projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('annotation_target_id'),
    sa.UniqueConstraint('original_completion_request_id', 'alternative_content', name='uq_alternative_content_per_request')
    )
    op.create_index(op.f('ix_completion_alternatives_project_id'), 'completion_alternatives', ['project_id'], unique=False)
    op.create_index(op.f('ix_completion_alternatives_rater_id'), 'completion_alternatives', ['rater_id'], unique=False)
    op.create_table('completion_responses',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('completion_request_id', sa.UUID(), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('created', sa.Integer(), nullable=True),
    sa.Column('annotation_target_id', sa.UUID(), nullable=False),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('choice_finish_reason', sa.String(), nullable=True),
    sa.Column('choice_role', sa.String(), nullable=True),
    sa.Column('choice_content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['annotation_target_id'], ['annotation_targets.id'], ),
    sa.ForeignKeyConstraint(['completion_request_id'], ['completions_requests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('annotation_target_id'),
    sa.UniqueConstraint('completion_request_id')
    )
    op.create_table('openrouter_guest_keys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('or_key_hash', sa.String(), nullable=False),
    sa.Column('or_name', sa.String(), nullable=False),
    sa.Column('or_label', sa.String(), nullable=False),
    sa.Column('or_disabled', sa.Boolean(), nullable=True),
    sa.Column('or_limit', sa.Integer(), nullable=True),
    sa.Column('or_created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('or_updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('or_key', sa.String(), nullable=False),
    sa.Column('or_usage', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('completion_project_call_key_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['completion_project_call_key_id'], ['completion_project_call_keys.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('completion_project_call_key_id')
    )
    op.create_index(op.f('ix_openrouter_guest_keys_or_key_hash'), 'openrouter_guest_keys', ['or_key_hash'], unique=True)
    op.create_table('completions_rater_notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('rater_id', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('completion_response_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['completion_response_id'], ['completion_responses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('completions_rater_notifications')
    op.drop_index(op.f('ix_openrouter_guest_keys_or_key_hash'), table_name='openrouter_guest_keys')
    op.drop_table('openrouter_guest_keys')
    op.drop_table('completion_responses')
    op.drop_index(op.f('ix_completion_alternatives_rater_id'), table_name='completion_alternatives')
    op.drop_index(op.f('ix_completion_alternatives_project_id'), table_name='completion_alternatives')
    op.drop_table('completion_alternatives')
    op.drop_table('project_memberships')
    op.drop_index(op.f('ix_completions_requests_project_id'), table_name='completions_requests')
    op.drop_table('completions_requests')
    op.drop_index(op.f('ix_completion_project_call_keys_project_id'), table_name='completion_project_call_keys')
    op.drop_index(op.f('ix_completion_project_call_keys_key'), table_name='completion_project_call_keys')
    op.drop_table('completion_project_call_keys')
    op.drop_index(op.f('ix_completion_projects_creator_id'), table_name='completion_projects')
    op.drop_table('completion_projects')
    op.drop_table('annotation_target_annotation_link')
    op.drop_table('agent_widgets')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_auth_provider'), table_name='users')
    op.drop_table('users')
    op.drop_table('completion_annotations')
    op.drop_table('annotation_targets')
    # ### end Alembic commands ###
